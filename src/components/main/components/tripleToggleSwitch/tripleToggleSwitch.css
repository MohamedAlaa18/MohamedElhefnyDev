:root {
    --container-width: 22rem;
    --switch-width: 11rem;
    --switch-height: 50px;
    --animation-duration: 0.4s;
}

@media (max-width: 600px) {
    :root {
        --container-width: 15.4rem;
        --switch-width: 7.7rem;
    }

    label {
        font-size: 0.9rem;
        gap: 0.25rem;
    }
}

input[type="radio"] {
    display: none;
}

label {
    color: var(--subtitle);
    cursor: pointer;
    /* transition: 0.3s; */
}

label i {
    transition: 0.3s;
}

label:not(.white-font):hover i {
    color: rgba(93, 188, 252, 0.5);

}

.light label:not(.white-font):hover i {
    color: rgba(244, 165, 96, 0.8);
}


.white-font,
.white-font:hover,
.light .white-font,
.light .white-font:hover {
    color: white;
}

.white-font i {
    color: var(--blue);
}

.light .white-font i {
    color: var(--orange);
}

.main-container {
    display: inline-block;
    vertical-align: middle;
    width: var(--container-width);
    height: var(--switch-height);
    border-radius: 8px;
    background: var(--primary);
    position: relative;
    /* transition: 0.5s ease; */
    transform: scale(clamp(0.6, (100vw / 600px), 1));
    z-index: 1;
}

.switch {
    height: var(--switch-height);
    width: var(--switch-width);
    background-color: rgb(36, 37, 46);
    border: 2px solid var(--blue);
    position: absolute;
    left: 0;
    border-radius: 8px;
    transition:
        transform var(--animation-duration) cubic-bezier(0.4, 0, 0.2, 1),
        border-radius var(--animation-duration) ease;
    will-change: transform;
    /* Optimize for smooth transitions */
}

.light .switch {
    border-color: rgb(63, 63, 70);
}

/* Left to Center */
.switch.left-to-center {
    animation: leftToCenter var(--animation-duration) forwards;
}

@keyframes leftToCenter {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(var(--switch-width));
    }
}

/* Left to Right */
.switch.left-to-right {
    animation: leftToRight var(--animation-duration) forwards;
}

@keyframes leftToRight {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(calc(var(--switch-width) * 2));
    }
}

/* Center to Left */
.switch.center-to-left {
    animation: centerToLeft var(--animation-duration) forwards;
}

@keyframes centerToLeft {
    from {
        transform: translateX(var(--switch-width));
    }

    to {
        transform: translateX(0);
    }
}

/* Center to Right */
.switch.center-to-right {
    animation: centerToRight var(--animation-duration) forwards;
}

@keyframes centerToRight {
    from {
        transform: translateX(var(--switch-width));
    }

    to {
        transform: translateX(calc(var(--switch-width) * 2));
    }
}

/* Right to Left */
.switch.right-to-left {
    animation: rightToLeft var(--animation-duration) forwards;
}

@keyframes rightToLeft {
    from {
        transform: translateX(calc(var(--switch-width) * 2));
    }

    to {
        transform: translateX(0);
    }
}

/* Right to Center */
.switch.right-to-center {
    animation: rightToCenter var(--animation-duration) forwards;
}

@keyframes rightToCenter {
    from {
        transform: translateX(calc(var(--switch-width) * 2));
    }

    to {
        transform: translateX(var(--switch-width));
    }
}

/* Left, Center, Right positions */
.switch.left-position {
    transform: translateX(0);
    /* border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px; */
}

.switch.center-position {
    transform: translateX(var(--switch-width));
}

.switch.right-position {
    transform: translateX(calc(var(--switch-width) * 2));
}

.left-label,
.center-label,
.right-label {
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--switch-height);
    width: var(--switch-width);
    position: absolute;
    border-radius: 8px;
}

.left-label {
    left: 0;
}

.center-label {
    left: var(--switch-width);
}

.right-label {
    left: calc(var(--switch-width) * 2);
}

#left:checked+label,
#center:checked+label,
#right:checked+label {
    background-color: transparent;
    cursor: context-menu;
}

@media (min-width: 600px) {
    label {
        gap: 0.5rem;
    }
}